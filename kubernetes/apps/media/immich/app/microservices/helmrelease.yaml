---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app immich-microservices
spec:
  interval: 30m
  chart:
    spec:
      # renovate: registryUrl=https://bjw-s.github.io/helm-charts
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  maxHistory: 3

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  dependsOn:
    - name: immich-server
      namespace: media

  values:
    controllers:
      main:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
          configmap.reloader.stakater.com/reload: &configMap immich-configmap
          secret.reloader.stakater.com/reload: &secret immich

        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.135.0@sha256:b5fb7ce9b38e8986eb73d12865c542e552fa6a3b769a518e1f1da0ec4787621f
#            args: start-microservices.sh

            envFrom:
              - secretRef:
                  name: *secret
              - configMapRef:
                  name: *configMap

            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 100m
                memory: 6000Mi
              limits:
                gpu.intel.com/i915: 1

        pod:
          enableServiceLinks: false

          nodeSelector:
            intel.feature.node.kubernetes.io/gpu: "true"

          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app

    persistence:
      library:
        existingClaim: immich-upload-pvc
        globalMounts:
          - path: /usr/src/app/upload

      geocoding-dump:
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/.reverse-geocoding-dump

      geoname-dump:
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/node_modules/local-reverse-geocoder/geonames_dump

      transformers-cache:
        type: emptyDir
        globalMounts:
          - path: /usr/src/app/.transformers_cache
